<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jms
                           http://www.springframework.org/schema/jms/spring-jms.xsd
                           http://activemq.apache.org/schema/core
                           http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd">

    <!-- Get the amq configuration settings from the environment. This enables us to have
    - configurations on different machines
    -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="false"/>
        <property name="locations">
            <list>
                <value>classpath:env.properties</value>
            </list>
        </property>
    </bean>

    <!--  ActiveMQ Destination  -->

    <!-- We need to send to a topic -->
    <bean id="statUpdateTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="${amq.topic}"/>
    </bean>
    
    <!-- JMS ConnectionFactory to use, configuring using an environment property -->
    <amq:connectionFactory id="jmsFactory" brokerURL="${amq.url}"/>

    <!-- Create an instanceID on startup. There should be one instance of the application -->
    <bean id="instanceUUID" class="java.util.UUID" factory-method="randomUUID"/>
    <bean id="instanceId" factory-bean="instanceUUID" factory-method="toString"/>

    <bean id="statMessageConverter" class="net.vijedi.messaging.jms.StatMessageConverter" />
    
    <!-- JMS  Configuration -->
    <bean id="jmsProducerConnectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory"
          p:targetConnectionFactory-ref="jmsFactory"/>

    <bean id="jmsConsumerConnectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory"
          p:targetConnectionFactory-ref="jmsFactory"/>

    <bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="jmsProducerConnectionFactory"
          p:defaultDestination-ref="statUpdateTopic"
         p:messageConverter-ref="statMessageConverter" />

    <bean id="eventProducer" class="net.vijedi.messaging.common.EventProducer">
        <property name="eventSender" ref="eventSender"/>
        <property name="producerId" ref="instanceId"/>
    </bean>
    
    <bean id="eventSender" class="net.vijedi.messaging.jms.JmsEventSender"
          p:template-ref="jmsProducerTemplate"
         p:topic-ref="statUpdateTopic" />

    <jms:listener-container container-type="default"
                            connection-factory="jmsProducerConnectionFactory"
                            cache="none"
                            destination-type="topic">
        <jms:listener destination="${amq.topic}" ref="jmsMessageListener"/>
    </jms:listener-container>

    <bean id="statsMessageHandler" class="net.vijedi.messaging.common.StatMessageEventHandler">
        <property name="instanceId" ref="instanceId"/>
    </bean>

    <bean id="jmsMessageListener" class="net.vijedi.messaging.jms.JmsEventConsumer"
            p:messageConverter-ref="statMessageConverter"
            p:handler-ref="statsMessageHandler" />

</beans>